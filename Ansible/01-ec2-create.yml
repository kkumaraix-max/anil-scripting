- name: create ec2 and update dns r53 record
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0a1153447ef389531
    domain: "anilkathoju.space"
    zone_id: "Z096778411CYC46C0VA5Q"
    instances:
      - mongodb
      - redis
      - mysql
      - frontend
  tasks:
   - name: start an instance
     amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: "{{ item }}"
     loop: "{{ instances }}"
     register: ec2_output
   - name: print ec2_output
     ansible.builtin.debug:
       msg: "{{ ec2_output }}"
   - name: create r53 record
     amazon.aws.route53:
       state: present
       zone: "{{ domain }}"
       record: "{{ item.item }}.{{ domain }}" #mongodb.anilkathoju.space
       type: A
       ttl: 1
       value: "{{ item.instances[0].private_ip_address }}"
       overwrite: true
     loop: "{{ ec2_output.results }}"
   - name: create r53 record for frontend public ip
     amazon.aws.route53:
      state: present
      zone: "{{ domain }}"
      record: "{{ domain }}"
      type: A
      ttl: 1
      value: "{{ public_ip_address }}"
      overwrite: true
      when: item.item == "frontend"
     loop: "{{ ec2_output.results }}"  
   - name: print hostname and private ip
     ansible.builtin.debug:
      msg: "{{ item.item }} : {{ item.instances[0].private_ip_address }}"
     loop: "{{ ec2_output.results }}"
   - name: print public ip
     ansible.builtin.debug:
       msg: "{{item.item}} : {{item.instances[0].public_ip_address }}"
       when: item.item == frontend
     loop: "{{ ec2_output.results }}"

            
