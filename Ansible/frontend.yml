- name: Setup Frontend
  hosts: frontend
  become: true
  tasks:
   - name: isntall nginx
     ansible.builtin.package:
       name: nginx
       state: present
   - name: start nginx
     ansible.builtin.service:     
       name: nginx
       state: started
       enabled: true
   - name: delete existing files form /usr/share/nginx/html 
     ansible.builtin.command: rm -rf /usr/share/nginx/html/*
   - name: download code
     ansible.builtin.get_url:
      url: https://expense-joindevops.s3.us-east-1.amazonaws.com/expense-frontend-v2.zip
      dest: /tmp/frontend.zip
   - name: unzipdownloaded code
     ansible.builtin.unarchive:
       src: /tmp/frontend.zip
       dest: /usr/share/nginx/html
       remote_src: yes
   - name: copying expense content
     ansible.builtin.copy:
        dest: /etc/nginx/default.d/expense.conf
        content: |
          proxy_http_version 1.1;

          location /api/ { 
              proxy_pass http://172.31.26.68:8080/; 
          }

          location /health {
              stub_status on;
              access_log off;
          }
        owner: root
        group: root
        mode: '0644'
   - name: restart nginx
     ansible.builtin.service:
        name: nginx
        state: restarted
- name: Setup backend #Setup backend
  hosts: backend
  become: true
  tasks:
    - name: disabling nodejs
      ansible.builtin.shell: dnf module disable nodejs -y
    - name: enabling nodejs  
      ansible.builtin.shell: dnf module enable nodejs:20 -y
    - name: install nodejs  
      ansible.builtin.package:
        name: nodejs
        state: present
    - name: create user
      ansible.builtin.user:
        name: expense
        state: present
    - name: creat directory
      ansible.builtin.file:
         path: /app
         state: directory
         owner: expense
         group: expense
         mode: '0755'
    - name: downloading code
      ansible.builtin.get_url:
        url: https://expense-joindevops.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip
        mode: '0644'
    - name: extract code to app 
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes
        owner: expense
        group: expense   
    - name: Install Node.js dependencies
      ansible.builtin.npm:
        path: /app
        become: true
        become_user: expense
    - name: Configure Backend service for Expense project
      ansible.builtin.copy:
        dest: /etc/systemd/system/backend.service
        content: |
          [Unit]
          Description=Backend Service

          [Service]
          User=expense
          Environment=DB_HOST="172.31.17.123"
          ExecStart=/bin/node /app/index.js
          SyslogIdentifier=backend

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: '0644'

   


     